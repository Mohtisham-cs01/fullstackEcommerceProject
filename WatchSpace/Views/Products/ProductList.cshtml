@using WatchSpace.Helper

@inject IApp_Config _appConfig

@model IEnumerable<WatchSpace.Models.Product>

@{ ViewData["Title"] = "Shop Now"; }

@*<div class="row">
        @foreach (var watch in Model)
        {

    <div class="col-sm-4">
        <div class="card">
            <img class="card-img-top" src="@watch.Image" alt="Card image cap">
            <div class="card-body">
                <h5 class="card-title">@watch.Name</h5>
                <span class="badge badge-success">Quantity @watch.Quantity</span>
                <span class="badge badge-danger">Price @watch.Display_Price</span>
                <button type="button" class="btn btn-primary BtnAddCart" ItemName="@watch.Name" ItemPrice="@watch.Display_Price" ItemImage="@watch.Image" ItemID="@watch.Id">Add To Cart</button>
            </div>
        </div>
    </div>}
    </div>*@

<style>

    .PageLoader {
        background: #FFFFFF;
        height: 100vh;
        width: 100%;
        position: fixed;
        z-index: 100;
    }

    .spinner {
        display: block;
        position: fixed;
        z-index: 1031; /* High z-index so it is on top of the page */
        top: 50%;
        right: 50%;
    }

    .loader {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        width: 100%;
        height: 100%;
        background: #fff;
        z-index: 99999
    }

</style>

<div class="loader d-none">
    <div class="h-100 d-flex justify-content-center">
        <div class="align-self-center">
            <img src="~/admin/assets/img/loader/loader.svg" alt="loader" />
            @*<img src="assets/img/loader/loader.svg" alt="loader">*@
        </div>
    </div>
</div>


<div class="container">

    @*<div>
            <form action="searchByName" style=" display: flex; flex-direction: row-reverse; margin: 31px 28px">
                <div>
                    <input type="text" name="Name" placeholder="Enter Watch Name" />

                    <button type="submit" class="btn btn-primary">Search</button>
                </div>
            </form>
        </div>*@
</div>


<!-- shop section -->

<input type="hidden" id="hiddenUserID" value="@_appConfig.UserID" />
<div style="">
    <i class="fa fa-shopping-cart" id="shopping-cart" aria-hidden="true" style="
    display: flex;
    flex-direction: row-reverse;
    padding: 2rem;
    font-size: 2rem;
"></i>
</div>


<section class="shop_section " style=" padding: 50px 0 !important;">
    <div class="container">
        <div class="heading_container heading_center">
            <h2>
                Shop Trending Watches
            </h2>
            <div>
                <form action="searchByPrice" style=" display: flex; flex-direction: row-reverse; margin: 31px 0;">
                    <div class="col-sm-12 col-md-12 col-lg-12  d-flex justify-content-center align-items-center">
                        <div class="form-group mx-3">

                            <input type="text" name="min" placeholder="Price To" class="form-control" autocomplete="off"/>
                        </div>


                        <div class="form-group mx-3">

                            <input type="text" name="max" placeholder="Price From" class="form-control" autocomplete="off"/>
                        </div>

                        <div class="form-group mx-3">
                            <button type="submit" class="btn btn-primary">Filter</button>
                        </div>

                        <div class="form-group mx-3">
                            <input type="text" name="Name" class="form-control" placeholder="Enter Watch Name" autocomplete="off" />
                        </div>

                        <div class="form-group mx-3">
                            <button type="submit" class="btn btn-primary">Search</button>
                            <button type="button" class="btn btn-primary btnClear">Clear</button>
                        </div>



                    </div>
                </form>
            </div>
        </div>
        <div class="row">
            @foreach (var watch in Model)
            {
<div class="col-sm-6 col-xl-3">
    <div class="box" style=" background-color: white; box-shadow: 5px 5px 5px 0 rgba(0, 0, 0, 0.25), -2px -2px 3px 0 rgba(0, 0, 0, 0.05) !important;">
        <a href="">
            <div class="img-box">
                <img src="@watch.Image" alt="">
            </div>
            <div class="detail-box">
                <h6>
                    @watch.Name
                </h6>
                <h6>
                    Price:
                    <span>
                        $@watch.Display_Price
                    </span>
                </h6>
            </div>
            <div class="new">
                <span>
                    New
                </span>
            </div>
        </a>
    </div>
    <div class="btn-box">
        <a class="btn btn-primary BtnAddCart" ItemQuantity="@watch.Quantity" ItemName="@watch.Name" ItemPrice="@watch.Display_Price" ItemImage="@watch.Image" ItemID="@watch.Id">
            Add To Cart
        </a>
    </div>
</div>}

        </div>
    </div>
</section>

<!-- end shop section -->





<div class="modal fade bd-example-modal-lg" data-backdrop="static" data-keyboard="false" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">My Shopping List</h5>
            </div>
            <div class="modal-body">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th scope="col">Image</th>
                            <th scope="col">Name</th>
                            <th scope="col">Price</th>
                            <th scope="col">Quantity</th>
                            <th scope="col">Total Amount</th>
                            <th scope="col">Action</th>
                        </tr>
                    </thead>
                    <tbody class="ModalCartBody">
                    </tbody>
                </table>
            </div>
            <div class="card-footer">
                <div class="row">
                    <div class="col-sm-6">
                        <button type="button" class="btn btn-danger addCartCloseBtn float-left">Close</button>
                    </div>
                    <div class="col-sm-6">
                        <button type="button" class="btn btn-primary float-right BtnConfirm">Confirm</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade UserInfoModal" data-backdrop="static" data-keyboard="false" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">User Information & Account Details</h5>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="row">
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>First Name</label>
                                    <input type="text" class="form-control" id="Txt_FirstName" placeholder="First Name" autocomplete="off" required="required">
                                    <span class="text-danger required_FN" hidden>* Required</span>
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Last Name</label>
                                    <input type="text" class="form-control" id="Txt_LastName" placeholder="Last Name" autocomplete="off" required="required">
                                    <span class="text-danger required_LN" hidden>* Required</span>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="form-group">
                                    <input type="hidden" id="IsEmailMatched" value="" />
                                    <label>Email</label>
                                    <input type="text" class="form-control" id="Txt_Email" placeholder="Email" autocomplete="off" required="required">
                                    <span class="text-danger required_Email" hidden>* Required</span>
                                    <span class="text-danger validEmailError" hidden>Enter valid email</span>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="form-group">
                                    <label>Phone No</label>
                                    <input type="text" class="form-control" id="Txt_PhoneNo" placeholder="Phone No" autocomplete="off" required="required">
                                    <span class="text-danger required_PhoneNo" hidden>* Required</span>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="form-group">
                                    <label>Address</label>
                                    <input type="text" class="form-control" id="Txt_Address" placeholder="Address" autocomplete="off" required="required">
                                    <span class="text-danger required_Address" hidden>* Required</span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <input type="hidden" id="hiddenTotalBill" value="" />
                        <span class="badge badge-success TotalAmountBadge float-right"></span>
                    </div>
                </div>
            </div>
            <div class="card-footer">
                <div class="row">
                    <div class="col-sm-6">
                        <button type="button" class="btn btn-danger UserInfoModalCloseBtn float-left">Close</button>
                    </div>
                    <div class="col-sm-6">
                        <input type="button" class="btn btn-primary float-right BtnSbmtUserDetail" value="Submit" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade userRegisteredEmailModal" data-backdrop="static" data-keyboard="false" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Please Enter Your Registered Email</h5>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-sm-12">
                        <div class="form-group">
                            <label>Email</label>
                            <input type="text" class="form-control" id="userRegisteredTxt_Email" placeholder="Email" autocomplete="off" required="required">
                            <span class="text-danger userRegistered_Email" hidden>* Required</span>
                            <span class="text-danger userRegisteredvalidEmailError" hidden>Enter valid email</span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-footer">
                <div class="row">
                    <div class="col-sm-6">
                        <button type="button" class="btn btn-danger userRegisteredEmailCloseBtn float-left">Close</button>
                    </div>
                    <div class="col-sm-6">
                        <button type="button" class="btn btn-primary float-right BtnuserRegisteredEmail">Submit</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<link href="~/toastr/toastr.css" rel="stylesheet" />
<script src="~/lib/jquery/dist/jquery.js"></script>
<script src="~/toastr/toastr.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.1/dist/sweetalert2.all.min.js"></script>

<script>

    var addToCartArr = [];
    var cartModel = {};
    var totalBalance = 0;
    var itemQuantity;

    $(document).ready(function () {
        /*debugger*/
        var userID = '@TempData["UserID"]';
        if (userID != null && userID != undefined && userID != "") {
            toastr.success("Your order submitted successfully! Please check your email");
            $(".loader").addClass("d-none");
        }

        $(document).on("click", ".BtnAddCart", function () {
            var itemID = $(this).attr("ItemID");
            var itemName = $(this).attr("ItemName");
            var itemPrice = $(this).attr("ItemPrice");
            var itemImage = $(this).attr("ItemImage");
            itemQuantity = $(this).attr("ItemQuantity");

            var html = "<tr itemID='" + itemID + "'><td><img src='" + itemImage + "' style='width:100px; height:100px;'></td><td>" + itemName + "</td><td>" + itemPrice + "</td><td><input type='number' class='form-control col-md-8 QuantityInput ItemQuantity_" + itemID + "' value='1' min='1' max="+itemQuantity+"  exactPrice=" + itemPrice + " /></td><td><lable class='TotalAmount_" + itemID + "'></lable></td><td><button type='button' class='btn btn-danger BtnRemoveItem'><i class='fa fa-trash'></i></button></td></tr>";
            if (itemQuantity > 0) {
                if (document.getElementsByClassName("ItemQuantity_" + itemID).length > 0) {
                    var alreadyAddedValue = $(".ItemQuantity_" + itemID).val();
                    if (parseInt(alreadyAddedValue) == parseInt(itemQuantity)) {
                        toastr.error("Limit exceed ");

                    } else {
                        var Value = $(".ItemQuantity_" + itemID).val(parseInt(alreadyAddedValue) + 1).val();
                        $(".TotalAmount_" + itemID).text((Value) * itemPrice);
                    }
                } else {
                    $(".ModalCartBody").append(html);
                    $(".TotalAmount_" + itemID).text(itemPrice);
                }
                $(".bd-example-modal-lg").modal("toggle");
            }
        });

        $(document).on("click", ".BtnRemoveItem", function () {
            $(this).closest("tr").remove();
        });

        $(document).on("click", "#shopping-cart", function () {
            $(".bd-example-modal-lg").modal("toggle");
        });

        $(document).on("change", ".QuantityInput", function () {
            debugger
            var value = $(this).val();
            var price = $(this).attr("exactPrice");
            //if (parseInt(value) <= parseInt(itemQuantity)) {
            //    $(this).closest('td').next('td').find('lable').text(parseInt(value) * parseInt(price));
            //} else {
            //    $(this).val(parseInt(itemQuantity));
            //    $(this).closest('td').next('td').find('lable').text(parseInt(itemQuantity) * parseInt(price));
            //    toastr.error("Limit exceed 2");
            //}
            if (parseInt(value) >= parseInt(itemQuantity)) {
                $(this).val(parseInt(itemQuantity));
                $(this).closest('td').next('td').find('lable').text(parseInt(itemQuantity) * parseInt(price));
                //if (parseInt(value) == parseInt(itemQuantity)) {
                //toastr.error("Limit exceed 2");
                //}
                toastr.error("Limit exceed");
            } else {
                $(this).closest('td').next('td').find('lable').text(parseInt(value) * parseInt(price));
            }
        });

        $(document).on("click", ".addCartCloseBtn", function () {
            $(".bd-example-modal-lg").modal("toggle");
        });

        $(document).on("click", ".userRegisteredEmailCloseBtn", function () {
            $(".userRegisteredEmailModal").modal("toggle");
        });

        $(document).on("click", ".BtnConfirm", function () {
            debugger
            var regUserID = $("#hiddenUserID").val();
            if (regUserID != null && regUserID != "" && regUserID != undefined && regUserID > 0) {
                MyShoppingListCart();
                var addToCartJsonData = JSON.stringify(addToCartArr);
                var data = {
                    'UserID': regUserID,
                    'AddToCartTextContent': addToCartJsonData,
                    'TotalBill': $("#hiddenTotalBill").val()
                };
                $(".loader").removeClass("d-none");
                $.ajax({
                    url: '/Users/AddToCartForRegisteredUser',
                    type: 'POST',
                    data: data,
                    success: function (result) {
                        if (result == true) {
                            window.location.href = "/Home/PayNow?TotalBill=" + parseInt($("#hiddenTotalBill").val());
                        } else {
                            toastr.error("Something went wrong. Please try again later.");
                            $(".loader").addClass("d-none");
                        }
                    }
                });
            }
            else {
                Swal.fire({
                    title: 'Conformation ?',
                    text: "Are you already register with us?",
                    icon: 'info',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $(".userRegisteredEmailModal").modal("toggle");
                        $(".bd-example-modal-lg").modal("toggle");
                    } else {
                        MyShoppingListCart();
                        $(".bd-example-modal-lg").modal("toggle");
                        $(".UserInfoModal").modal("toggle");
                    }
                });
            }
        });

        $(document).on("click", ".UserInfoModalCloseBtn", function () {
            location.reload();
        });

        $(document).on("click", ".BtnSbmtUserDetail", function () {
            var firstName = $("#Txt_FirstName").val();
            var lastName = $("#Txt_LastName").val();
            var email = $("#Txt_Email").val();
            var phoneNo = $("#Txt_PhoneNo").val();
            var address = $("#Txt_Address").val();
            var formValidate = true;
            if (firstName == undefined || firstName == "" || firstName == null) {
                $(".required_FN").removeAttr("hidden");
                formValidate = false;
            } else {
                $(".required_FN").attr("hidden", true);
            }
            if (lastName == undefined || lastName == "" || lastName == null) {
                $(".required_LN").removeAttr("hidden");
                formValidate = false;
            } else {
                $(".required_LN").attr("hidden", true);
            }
            if (email == undefined || email == "" || email == null) {
                $(".required_Email").removeAttr("hidden");
                formValidate = false;
            } else {
                $(".required_Email").attr("hidden", true);
            }
            if (phoneNo == undefined || phoneNo == "" || phoneNo == null) {
                $(".required_PhoneNo").removeAttr("hidden");
                formValidate = false;
            } else {
                $(".required_PhoneNo").attr("hidden", true);
            }
            if (address == undefined || address == "" || address == null) {
                $(".required_Address").removeAttr("hidden");
                formValidate = false;
            } else {
                $(".required_Address").attr("hidden", true);
            }
            if (email != undefined && email != "" && email != null) {
                var IsEmailValid = isEmail(email);
                if (IsEmailValid == false) {
                    $(".validEmailError").removeAttr("hidden");
                    formValidate = false;
                } else {
                    $(".validEmailError").attr("hidden", true);
                }
            }
            if ($("#IsEmailMatched").val() == "true") {
                Swal.fire({
                    icon: 'error',
                    html: 'The email you entered is already taken. Please use another email.'
                });
                formValidate = false;
            }

            if (formValidate == true) {
                var model = {
                    First_Name: firstName,
                    Last_Name: lastName,
                    Email: email,
                    Phone_Number: phoneNo,
                    Address: address
                };
                var userJsonData = JSON.stringify(model);
                var addToCartJsonData = JSON.stringify(addToCartArr);
                var data = {
                    'UserTextContent': userJsonData,
                    'AddToCartTextContent': addToCartJsonData,
                    'TotalBill': $("#hiddenTotalBill").val()
                };
                $(".loader").removeClass("d-none");
                $.ajax({
                    url: '/Users/AddToCart',
                    type: 'POST',
                    data: data,
                    success: function (result) {
                        if (result == true) {
                            window.location.href = "/Home/PayNow?TotalBill=" + parseInt($("#hiddenTotalBill").val());
                        } else {
                            toastr.error("Something went wrong. Please try again later.");
                            $(".loader").addClass("d-none");
                        }
                    }
                });
            }

        });

        $(document).on("focusout", "#Txt_Email", function () {
            var Email = $(this).val();
            $("#IsEmailMatched").val("");
            $(".required_Email").attr("hidden", true);
            if (Email != undefined && Email != null && Email != "") {
                var IsEmailValid = isEmail(Email);
                if (IsEmailValid == true) {
                    $(".validEmailError").attr("hidden", true);
                    $(".PageLoader").removeClass("d-none");
                    $.ajax({
                        url: '/Users/CheckUserDuplicateEmail',
                        type: 'POST',
                        data: { Email: Email },
                        success: function (result) {
                            if (result == true) {
                                $("#IsEmailMatched").val("true");
                                Swal.fire({
                                    icon: 'error',
                                    html: 'The email you entered is already taken. Please use another email.'
                                });
                            } else {
                                $("#IsEmailMatched").val("false");
                            }
                            $(".PageLoader").addClass("d-none");
                        }
                    });
                }
            } else {
                $(".required_Email").removeAttr("hidden");
            }
        });

        $(document).on("click", ".BtnuserRegisteredEmail", function () {
            var userRegisteredEmail = $("#userRegisteredTxt_Email").val();
            $(".userRegistered_Email").attr("hidden", true);
            $(".userRegisteredvalidEmailError").attr("hidden", true);
            if (userRegisteredEmail != undefined && userRegisteredEmail != null && userRegisteredEmail != "") {
                var IsEmailValid = isEmail(userRegisteredEmail);
                if (IsEmailValid == true) {
                    $(".loader").removeClass("d-none");
                    $(".userRegisteredvalidEmailError").attr("hidden", true);
                    $.ajax({
                        url: '/Users/IsAlreadyRegisterWithUs',
                        type: 'POST',
                        data: { Email: userRegisteredEmail },
                        success: function (result) {
                            if (parseInt(result) != 0) {
                                var userID = parseInt(result);
                                MyShoppingListCart();
                                var addToCartJsonData = JSON.stringify(addToCartArr);
                                var data = {
                                    'UserID': userID,
                                    'AddToCartTextContent': addToCartJsonData,
                                    'TotalBill': $("#hiddenTotalBill").val()
                                };
                                $.ajax({
                                    url: '/Users/AddToCartForRegisteredUser',
                                    type: 'POST',
                                    data: data,
                                    success: function (result) {
                                        if (result == true) {
                                            window.location.href = "/Home/PayNow?TotalBill=" + parseInt($("#hiddenTotalBill").val());
                                        } else {
                                            toastr.error("Something went wrong. Please try again later.");
                                            $(".loader").addClass("d-none");
                                        }
                                    }
                                });
                            } else {
                                MyShoppingListCart();
                                $(".userRegisteredEmailModal").modal("toggle");
                                $(".UserInfoModal").modal("toggle");
                            }
                        }
                    });
                } else {
                    $(".userRegisteredvalidEmailError").attr("hidden", false);
                }
            } else {
                $(".userRegistered_Email").attr("hidden", false);
            }
        });

        $(document).on("click", ".btnClear", function () {
            window.location.href = "/Products/ProductList";
        });

    });

    function isEmail(email) {
        var EmailRegex = /^([a-zA-Z0-9_.+-])+\@@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/;
        return EmailRegex.test(email);
    }

    function MyShoppingListCart() {
        $(".ModalCartBody tr").each(function (index, value) {
            cartModel = {};
            cartModel.ProductID = parseInt($(this).attr("itemid"));
            cartModel.Quantity = parseInt($(".ItemQuantity_" + $(this).attr("itemid")).val());
            cartModel.TotalAmount = parseInt($(".TotalAmount_" + $(this).attr("itemid")).text());
            addToCartArr.push(cartModel);
            totalBalance = totalBalance + parseInt(cartModel.TotalAmount);
        });
        $(".TotalAmountBadge").html("Total: " + totalBalance + " USD");
        $("#hiddenTotalBill").val(totalBalance);
    }

</script>